/**
 * generated by XText 2.19.0
 */
package prodest.es.gov.br.dsl.nestdsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import prodest.es.gov.br.dsl.nestdsl.AbstractElement;
import prodest.es.gov.br.dsl.nestdsl.Method;
import prodest.es.gov.br.dsl.nestdsl.MethodArg;
import prodest.es.gov.br.dsl.nestdsl.NestdslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Method</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link prodest.es.gov.br.dsl.nestdsl.impl.MethodImpl#getVerb <em>Verb</em>}</li>
 *   <li>{@link prodest.es.gov.br.dsl.nestdsl.impl.MethodImpl#getName <em>Name</em>}</li>
 *   <li>{@link prodest.es.gov.br.dsl.nestdsl.impl.MethodImpl#getArgs <em>Args</em>}</li>
 *   <li>{@link prodest.es.gov.br.dsl.nestdsl.impl.MethodImpl#getReturnClassType <em>Return Class Type</em>}</li>
 *   <li>{@link prodest.es.gov.br.dsl.nestdsl.impl.MethodImpl#getReturnType <em>Return Type</em>}</li>
 *   <li>{@link prodest.es.gov.br.dsl.nestdsl.impl.MethodImpl#getArray <em>Array</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MethodImpl extends MinimalEObjectImpl.Container implements Method
{
  /**
   * The default value of the '{@link #getVerb() <em>Verb</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVerb()
   * @generated
   * @ordered
   */
  protected static final String VERB_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVerb() <em>Verb</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVerb()
   * @generated
   * @ordered
   */
  protected String verb = VERB_EDEFAULT;

  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getArgs() <em>Args</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArgs()
   * @generated
   * @ordered
   */
  protected EList<MethodArg> args;

  /**
   * The cached value of the '{@link #getReturnClassType() <em>Return Class Type</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReturnClassType()
   * @generated
   * @ordered
   */
  protected AbstractElement returnClassType;

  /**
   * The default value of the '{@link #getReturnType() <em>Return Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReturnType()
   * @generated
   * @ordered
   */
  protected static final String RETURN_TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getReturnType() <em>Return Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReturnType()
   * @generated
   * @ordered
   */
  protected String returnType = RETURN_TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getArray() <em>Array</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArray()
   * @generated
   * @ordered
   */
  protected static final String ARRAY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getArray() <em>Array</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArray()
   * @generated
   * @ordered
   */
  protected String array = ARRAY_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MethodImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return NestdslPackage.Literals.METHOD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVerb()
  {
    return verb;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVerb(String newVerb)
  {
    String oldVerb = verb;
    verb = newVerb;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NestdslPackage.METHOD__VERB, oldVerb, verb));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NestdslPackage.METHOD__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<MethodArg> getArgs()
  {
    if (args == null)
    {
      args = new EObjectContainmentEList<MethodArg>(MethodArg.class, this, NestdslPackage.METHOD__ARGS);
    }
    return args;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AbstractElement getReturnClassType()
  {
    if (returnClassType != null && returnClassType.eIsProxy())
    {
      InternalEObject oldReturnClassType = (InternalEObject)returnClassType;
      returnClassType = (AbstractElement)eResolveProxy(oldReturnClassType);
      if (returnClassType != oldReturnClassType)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, NestdslPackage.METHOD__RETURN_CLASS_TYPE, oldReturnClassType, returnClassType));
      }
    }
    return returnClassType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AbstractElement basicGetReturnClassType()
  {
    return returnClassType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReturnClassType(AbstractElement newReturnClassType)
  {
    AbstractElement oldReturnClassType = returnClassType;
    returnClassType = newReturnClassType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NestdslPackage.METHOD__RETURN_CLASS_TYPE, oldReturnClassType, returnClassType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getReturnType()
  {
    return returnType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReturnType(String newReturnType)
  {
    String oldReturnType = returnType;
    returnType = newReturnType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NestdslPackage.METHOD__RETURN_TYPE, oldReturnType, returnType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getArray()
  {
    return array;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArray(String newArray)
  {
    String oldArray = array;
    array = newArray;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NestdslPackage.METHOD__ARRAY, oldArray, array));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case NestdslPackage.METHOD__ARGS:
        return ((InternalEList<?>)getArgs()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case NestdslPackage.METHOD__VERB:
        return getVerb();
      case NestdslPackage.METHOD__NAME:
        return getName();
      case NestdslPackage.METHOD__ARGS:
        return getArgs();
      case NestdslPackage.METHOD__RETURN_CLASS_TYPE:
        if (resolve) return getReturnClassType();
        return basicGetReturnClassType();
      case NestdslPackage.METHOD__RETURN_TYPE:
        return getReturnType();
      case NestdslPackage.METHOD__ARRAY:
        return getArray();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case NestdslPackage.METHOD__VERB:
        setVerb((String)newValue);
        return;
      case NestdslPackage.METHOD__NAME:
        setName((String)newValue);
        return;
      case NestdslPackage.METHOD__ARGS:
        getArgs().clear();
        getArgs().addAll((Collection<? extends MethodArg>)newValue);
        return;
      case NestdslPackage.METHOD__RETURN_CLASS_TYPE:
        setReturnClassType((AbstractElement)newValue);
        return;
      case NestdslPackage.METHOD__RETURN_TYPE:
        setReturnType((String)newValue);
        return;
      case NestdslPackage.METHOD__ARRAY:
        setArray((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case NestdslPackage.METHOD__VERB:
        setVerb(VERB_EDEFAULT);
        return;
      case NestdslPackage.METHOD__NAME:
        setName(NAME_EDEFAULT);
        return;
      case NestdslPackage.METHOD__ARGS:
        getArgs().clear();
        return;
      case NestdslPackage.METHOD__RETURN_CLASS_TYPE:
        setReturnClassType((AbstractElement)null);
        return;
      case NestdslPackage.METHOD__RETURN_TYPE:
        setReturnType(RETURN_TYPE_EDEFAULT);
        return;
      case NestdslPackage.METHOD__ARRAY:
        setArray(ARRAY_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case NestdslPackage.METHOD__VERB:
        return VERB_EDEFAULT == null ? verb != null : !VERB_EDEFAULT.equals(verb);
      case NestdslPackage.METHOD__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case NestdslPackage.METHOD__ARGS:
        return args != null && !args.isEmpty();
      case NestdslPackage.METHOD__RETURN_CLASS_TYPE:
        return returnClassType != null;
      case NestdslPackage.METHOD__RETURN_TYPE:
        return RETURN_TYPE_EDEFAULT == null ? returnType != null : !RETURN_TYPE_EDEFAULT.equals(returnType);
      case NestdslPackage.METHOD__ARRAY:
        return ARRAY_EDEFAULT == null ? array != null : !ARRAY_EDEFAULT.equals(array);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (verb: ");
    result.append(verb);
    result.append(", name: ");
    result.append(name);
    result.append(", returnType: ");
    result.append(returnType);
    result.append(", array: ");
    result.append(array);
    result.append(')');
    return result.toString();
  }

} //MethodImpl
