/**
 * generated by XText 2.18.0.M3
 */
package prodest.es.gov.br.dsl.tests;

import com.google.inject.Inject;
import org.eclipse.xtext.testing.InjectWith;
import org.eclipse.xtext.testing.extensions.InjectionExtension;
import org.eclipse.xtext.testing.util.ParseHelper;
import org.eclipse.xtext.xbase.lib.Exceptions;
import org.eclipse.xtext.xbase.lib.IterableExtensions;
import org.junit.Assert;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import prodest.es.gov.br.dsl.nestdsl.AbstractElement;
import prodest.es.gov.br.dsl.nestdsl.Domainmodel;
import prodest.es.gov.br.dsl.nestdsl.Entity;
import prodest.es.gov.br.dsl.nestdsl.Property;
import prodest.es.gov.br.dsl.tests.NestDslInjectorProvider;

@ExtendWith(InjectionExtension.class)
@InjectWith(NestDslInjectorProvider.class)
@SuppressWarnings("all")
public class NestDslParsingTest {
  @Inject
  private ParseHelper<Domainmodel> parseHelper;
  
  @Test
  public void parseDomainmodel() {
    try {
      final Domainmodel model = this.parseHelper.parse(
        "entity MyEntity {\r\n                parent: MyEntity\r\n            }");
      AbstractElement _head = IterableExtensions.<AbstractElement>head(model.getElements());
      final Entity entity = ((Entity) _head);
      Assert.assertSame(entity, IterableExtensions.<Property>head(entity.getProperties()).getType());
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
}
